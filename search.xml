<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>部署博客</title>
      <link href="/%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2.html"/>
      <url>/%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2.html</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>有一个 Github 账号</li><li>有一定的基础</li><li>一定要有耐心</li></ul><p>创建你的 Github Page</p><blockquote><p>创建存储库<br>转到 GitHub 并创建一个名为 你的用户名.github.io 的新公共存储库，其中用户名是您&gt; 在 GitHub 上的用户名（或组织名称）。</p><p>如果存储库的第一部分与您的用户名不完全匹配，则它将不起作用，因此请确保正确无误。</p><p>来自 Github </p></blockquote><p>安装 Node.js 、Git（网上一搜一大堆教程）</p><p>命令行执行</p><pre><code>npm install hexo-cli -g</code></pre><p>安装 Git</p><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><pre><code>$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install</code></pre><h3 id="详细命令，如不需要，可以不进行阅读"><a href="#详细命令，如不需要，可以不进行阅读" class="headerlink" title="详细命令，如不需要，可以不进行阅读"></a>详细命令，如不需要，可以不进行阅读</h3><details class="folding-tag" ><summary> hexo命令 </summary>              <div class='content'>              <hr><p>以下是详细的 Hexo 命令</p><pre><code>$ hexo init [folder]新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。本命令相当于执行了以下几步：Git clone hexo-starter 和 hexo-theme-landscape 主题到当前目录或指定目录。使用 Yarn 1、pnpm 或 npm 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 Node.js 安装。new$ hexo new [layout] &lt;title&gt;新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。$ hexo new &quot;post title with whitespace&quot;参数    描述-p, --path    自定义新文章的路径-r, --replace    如果存在同名文章，将其替换-s, --slug    文章的 Slug，作为新文章的文件名和发布后的 URL默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 index.md 文件。你可以使用 --path 参数来覆盖上述行为、自行决定文件的目录：hexo new page --path about/me &quot;About me&quot;以上命令会创建一个 source/about/me.md 文件，同时 Front Matter 中的 title 为 &quot;About me&quot;注意！title 是必须指定的！如果你这么做并不能达到你的目的：hexo new page --path about/me此时 Hexo 会创建 source/_posts/about/me.md，同时 me.md 的 Front Matter 中的 title 为 &quot;page&quot;。这是因为在上述命令中，hexo-cli 将 page 视为指定文章的标题、并采用默认的 layout。generate$ hexo generate生成静态文件。选项    描述-d, --deploy    文件生成后立即部署网站-w, --watch    监视文件变动-b, --bail    生成过程中如果发生任何未处理的异常则抛出异常-f, --force    强制重新生成文件Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。使用该参数的效果接近 hexo clean &amp;&amp; hexo generate-c, --concurrency    最大同时生成文件的数量，默认无限制该命令可以简写为$ hexo gpublish$ hexo publish [layout] &lt;filename&gt;发表草稿。server$ hexo server启动服务器。默认情况下，访问网址为： http://localhost:4000/。选项    描述-p, --port    重设端口-s, --static    只使用静态文件-l, --log    启动日记记录，使用覆盖记录格式deploy$ hexo deploy部署网站。参数    描述-g, --generate    部署之前预先生成静态文件该命令可以简写为：$ hexo drender$ hexo render &lt;file1&gt; [file2] ...渲染文件。参数    描述-o, --output    设置输出路径migrate$ hexo migrate &lt;type&gt;从其他博客系统 迁移内容。clean$ hexo clean清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。list$ hexo list &lt;type&gt;列出网站资料。version$ hexo version显示 Hexo 版本。选项安全模式$ hexo --safe在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。调试模式$ hexo --debug在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并 提交调试信息到 GitHub。简洁模式$ hexo --silent隐藏终端信息。自定义配置文件的路径# 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高$ hexo generate --config custom.yml,custom2.json,custom3.yml自定义配置文件的路径，指定这个参数后将不再使用默认的 _config.yml。你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：# 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json$ hexo generate --config custom.yml,custom2.json,custom3.yml当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 _multiconfig.yml。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。显示草稿$ hexo --draft显示 source/_drafts 文件夹中的草稿文章。自定义 CWD$ hexo --cwd /path/to/cwd</code></pre>              </div>            </details><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p><pre><code>$ hexo deploy</code></pre><h2 id="Git-部署"><a href="#Git-部署" class="headerlink" title="Git 部署"></a>Git 部署</h2><p>安装 hexo-deployer-git。<br>    $ npm install hexo-deployer-git —save</p><p>修改配置。</p><pre><code>deploy:  type: git  repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io  branch: [branch]  message: [message]</code></pre><p>生成站点文件并推送至远程库。执行 </p><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>现在，你已经可以访问到最简单的网站了</p><p>https://&lt;你的 GitHub 用户名&gt;.github.io/</p><h3 id="关于主题和美化，被我咕咕咕了"><a href="#关于主题和美化，被我咕咕咕了" class="headerlink" title="关于主题和美化，被我咕咕咕了"></a>关于主题和美化，被我咕咕咕了</h3>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
